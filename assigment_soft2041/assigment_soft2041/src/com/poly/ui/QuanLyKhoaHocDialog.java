/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package com.poly.ui;

import com.poly.dao.ChuyenDeDao;
import com.poly.dao.KhoaHocDao;
import com.poly.dao.NguoiHocDao;
import com.poly.entity.ChuyenDe;
import com.poly.entity.KhoaHoc;
import com.poly.entity.NguoiHoc;
import com.poly.utils.Auth;
import com.poly.utils.MsgBox;
import com.poly.utils.XImage;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class QuanLyKhoaHocDialog extends java.awt.Dialog {

    /**
     * Creates new form QuanLyDialog
     */
    int row = -1;
    public QuanLyKhoaHocDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhoaHoc = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaGhiChu = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtKhaiGiang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtHocPhi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtThoiLuong = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNguoiTao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNgayTao = new javax.swing.JTextField();
        lblTenChuyenDe = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        cbChuyenDe = new javax.swing.JComboBox<>();

        jTextField1.setText("jTextField1");

        jScrollPane2.setViewportView(jEditorPane1);

        jButton1.setText("jButton1");

        setTitle("EduSys - Quản lý khóa học");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        tblKhoaHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã KH", "Thời lượng", "Học phí", "Khai giảng", "Tạo bởi", "Ngày tạo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhoaHoc.setRowHeight(22);
        tblKhoaHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoaHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhoaHoc);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Danh sách", jPanel1);

        txaGhiChu.setColumns(20);
        txaGhiChu.setRows(5);
        jScrollPane3.setViewportView(txaGhiChu);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel5.add(btnThem);

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel5.add(btnSua);

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel5.add(btnXoa);

        btnNew.setText("Mới");
        btnNew.setActionCommand("");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jPanel5.add(btnNew);

        jLabel5.setText("Ghi chú");

        jLabel2.setText("Chuyên đề");

        jLabel3.setText("Khai giảng");

        jLabel4.setText("Học phí");

        jLabel6.setText("Thời lượng (giờ)");

        jLabel7.setText("Người taọ");

        txtNguoiTao.setBackground(new java.awt.Color(204, 204, 204));

        jLabel8.setText("Ngày tạo");

        txtNgayTao.setBackground(new java.awt.Color(204, 204, 204));

        lblTenChuyenDe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTenChuyenDe.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(231, 231, 231))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtNguoiTao, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                                .addComponent(txtHocPhi)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(lblTenChuyenDe))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 2, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtKhaiGiang, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addComponent(txtNgayTao)
                            .addComponent(txtThoiLuong)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKhaiGiang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenChuyenDe))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHocPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtThoiLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNguoiTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        tabs.addTab("Cập nhật", jPanel2);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("CHUYÊN ĐỀ");

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbChuyenDe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbChuyenDeMouseClicked(evt);
            }
        });
        cbChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbChuyenDeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbChuyenDe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (txtKhaiGiang.getText().trim().isEmpty()) {
            MsgBox.altet(this, "Vui lòng nhập ngày khai giảng");
            return;
        }
        if (txtHocPhi.getText().trim().isEmpty()) {
            MsgBox.altet(this, "Vui lòng nhập Học Phí");
            return;
        }
        if (txtThoiLuong.getText().trim().isEmpty()) {
            MsgBox.altet(this, "Vui lòng nhập thời Lượng");
            return;
        }
       
       
        if (txaGhiChu.getText().trim().isEmpty()) {
            MsgBox.altet(this, "Vui lòng nhập ghi chú");
            return;
        }
        
        String ngayKhaiGiangStr = txtKhaiGiang.getText().trim();
        if (!isValidDate(ngayKhaiGiangStr)) {
            MsgBox.altet(this, "Ngày sinh không hợp lệ. Vui lòng nhập đúng định dạng yyyy-MM-dd.");
            return;
        }
        
        float hocPhi = 0;
        int thoiLuong = 0;
        try {
            hocPhi = Float.parseFloat(txtHocPhi.getText());
            if(hocPhi < 0) {
                 MsgBox.altet(this, "Học phí phải lớn hơn 0");
                return;
            }
        } catch (Exception e) {
              MsgBox.altet(this, "Học phí phải là số");
              return;
        }
         try {
            thoiLuong = Integer.parseInt(txtThoiLuong.getText());
            if(thoiLuong < 0) {
                 MsgBox.altet(this, "Thời lượng phải lớn hơn 0");
                return;
            }
        } catch (Exception e) {
              MsgBox.altet(this, "Thời lượng phải là số");
              return;
        }
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
         if(row == -1) {
            MsgBox.altet(this, "Hãy chọn khóa học để cập nhật");
            tabs.setSelectedIndex(0);
            return;
        }
        if (txtKhaiGiang.getText().trim().isEmpty()) {
            MsgBox.altet(this, "Vui lòng nhập ngày khai giảng");
            return;
        }
        if (txtHocPhi.getText().trim().isEmpty()) {
            MsgBox.altet(this, "Vui lòng nhập Học Phí");
            return;
        }
        if (txtThoiLuong.getText().trim().isEmpty()) {
            MsgBox.altet(this, "Vui lòng nhập thời Lượng");
            return;
        }
       
       
        if (txaGhiChu.getText().trim().isEmpty()) {
            MsgBox.altet(this, "Vui lòng nhập ghi chú");
            return;
        }
        
        String ngayKhaiGiangStr = txtKhaiGiang.getText().trim();
        if (!isValidDate(ngayKhaiGiangStr)) {
            MsgBox.altet(this, "Ngày sinh không hợp lệ. Vui lòng nhập đúng định dạng yyyy-MM-dd.");
            return;
        }
        
        float hocPhi = 0;
        int thoiLuong = 0;
        try {
            hocPhi = Float.parseFloat(txtHocPhi.getText());
            if(hocPhi < 0) {
                 MsgBox.altet(this, "Học phí phải lớn hơn 0");
                return;
            }
        } catch (Exception e) {
              MsgBox.altet(this, "Học phí phải là số");
              return;
        }
         try {
            thoiLuong = Integer.parseInt(txtThoiLuong.getText());
            if(thoiLuong < 0) {
                 MsgBox.altet(this, "Thời lượng phải lớn hơn 0");
                return;
            }
        } catch (Exception e) {
              MsgBox.altet(this, "Thời lượng phải là số");
              return;
        }
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if(row == -1) {
            MsgBox.altet(this, "Vui lòng chọn sinh viên để xóa");
            return;
        }
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void tblKhoaHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoaHocMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = tblKhoaHoc.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblKhoaHocMouseClicked

    private void cbChuyenDeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbChuyenDeMouseClicked
        
    }//GEN-LAST:event_cbChuyenDeMouseClicked

    private void cbChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbChuyenDeActionPerformed
           chonChuyenDe();
    }//GEN-LAST:event_cbChuyenDeActionPerformed

    private boolean isValidDate(String date) {
        if (date == null || date.isEmpty()) {
            return false;
        }
        try {
            java.sql.Date.valueOf(date);
            return true;
        } catch (IllegalArgumentException e) {
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyKhoaHocDialog dialog = new QuanLyKhoaHocDialog(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbChuyenDe;
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblTenChuyenDe;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblKhoaHoc;
    private javax.swing.JTextArea txaGhiChu;
    private javax.swing.JTextField txtHocPhi;
    private javax.swing.JTextField txtKhaiGiang;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtNguoiTao;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables
     
    KhoaHocDao dao = new KhoaHocDao();
    ChuyenDeDao cddao = new ChuyenDeDao();

    private void init() {
        this.setLocationRelativeTo(null);
        this.setIconImage(XImage.getApplImage());
        this.row = -1;
        this.fillComboBoxChuyenDe();
        this.fillTable();
        this.txtNgayTao.setEditable(false);
         this.txtNguoiTao.setEditable(false);
    }
    


    private void fillComboBoxChuyenDe() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbChuyenDe.getModel();
        model.removeAllElements();
        List<ChuyenDe> list = cddao.selectAll();
        for (ChuyenDe cd : list) {
            model.addElement(cd);
        }
    }

    private void chonChuyenDe() {
        ChuyenDe chuyenDe = (ChuyenDe) cbChuyenDe.getSelectedItem();
        lblTenChuyenDe.setText(chuyenDe.getTenCD());
        txtThoiLuong.setText(String.valueOf(chuyenDe.getThoiLuong()));
        txtHocPhi.setText(String.valueOf(chuyenDe.getHocPhi()));
        lblTenChuyenDe.setText(chuyenDe.getTenCD());
        txaGhiChu.setText(chuyenDe.getMoTa());

        this.fillTable();
        this.row = -1;
        tabs.setSelectedIndex(0);
    }

    private void insert() {
        KhoaHoc kh = getForm();
        try {
            dao.insert(kh);
            this.clearForm();
            MsgBox.altet(this, "Thêm mới khóa học thành công");
             this.fillTable();
            this.edit();
            tabs.setSelectedIndex(0);
        } catch (Exception e) {
            System.out.println(e.fillInStackTrace());
            MsgBox.altet(this, "Mã khóa học đã tồn tại");
        }
    }

    private void update() {
         int maKH = (Integer) tblKhoaHoc.getValueAt(this.row, 0);
         
        KhoaHoc kh = getForm();
        kh.setMaKH(maKH);
        System.out.println(kh.toString());
        try {
             dao.update(kh);
             this.clearForm();
             this.fillTable();
            MsgBox.altet(this, "Cập nhật Người học thành công");
            tabs.setSelectedIndex(0);
        } catch (Exception e) {
            MsgBox.altet(this, "Cập nhật thất bại");
            System.out.println(e.fillInStackTrace());
        }
    }

    private void delete() {
       if (!Auth.isManager()) {
            MsgBox.altet(this, "Bạn không có quyền xóa nhân viên !");
       } else {
           if (MsgBox.confirm(this, "Bạn thực sự muốn xóa người học này?")) {
              int maKH = (Integer) tblKhoaHoc.getValueAt(this.row, 0);
                if (dao.selectById(maKH) != null) {
                    try {
                       dao.delete(maKH);
                        this.clearForm();
                     
                        this.fillTable();
                        MsgBox.altet(this, "Xóa thành công");
                        tabs.setSelectedIndex(0);
                    } catch (Exception e) {
                        MsgBox.altet(this, "Xóa thất bại");
                    }
                } else {
                    MsgBox.altet(this, "Mã người học không tồn tại!");
                }
            }
        }
    }
    
    
    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblKhoaHoc.getModel();
        model.setRowCount(0);
        try {
            ChuyenDe chuyenDe = (ChuyenDe) cbChuyenDe.getSelectedItem();
            if (chuyenDe != null) {
                List<KhoaHoc> list = dao.selectByChuyenDe(chuyenDe.getMaCD());
                for (KhoaHoc kh : list) {
                    Object[] rowData = {kh.getMaKH(), kh.getThoiLuong(), kh.getHocPhi(), kh.getNgayKG(), kh.getMaNV(), kh.getNgayTao()};
                    model.addRow(rowData);
                }
            } else {
                MsgBox.altet(this, "Chưa chọn Chuyên Đề");
            }
        } catch (Exception e) {
            System.out.println(e.fillInStackTrace());
            e.printStackTrace();
            MsgBox.altet(this, "Lỗi truy vấn dữ liệu");
        }

    }

    private void clearForm() {
        txtKhaiGiang.setText("");
        txtHocPhi.setText("");
        txtNguoiTao.setText("");
        txtNgayTao.setText("");
        txaGhiChu.setText("");
        txtThoiLuong.setText("");
    }

    private void edit() {
        if (row != -1) {
            int manh = (Integer) tblKhoaHoc.getValueAt(this.row, 0);
            KhoaHoc kh = dao.selectById(manh);
            this.setForm(kh);
            tabs.setSelectedIndex(1);
        } else {
            System.out.println("eror");
        }
    }

    private void setForm(KhoaHoc kh) {
        String chuyenDe = cbChuyenDe.getSelectedItem().toString();
        lblTenChuyenDe.setText(chuyenDe);
        txtKhaiGiang.setText(kh.getNgayKG() + "");
        txtHocPhi.setText(kh.getHocPhi() + "");
        txtNguoiTao.setText(kh.getMaNV());
        txtNgayTao.setText(kh.getNgayTao() + "");
        txaGhiChu.setText(kh.getGhiChu());
        txtThoiLuong.setText(kh.getThoiLuong()+"");
    }

    private KhoaHoc getForm() {
        KhoaHoc kh = new KhoaHoc();
        kh.setGhiChu(txaGhiChu.getText());
        kh.setHocPhi(Float.parseFloat(txtHocPhi.getText()));
        ChuyenDe chuyenDe = (ChuyenDe) cbChuyenDe.getSelectedItem();
        kh.setMaCD(chuyenDe.getMaCD());
        kh.setThoiLuong(Integer.parseInt(txtThoiLuong.getText()));

        String ngayKhaiGiangText = txtKhaiGiang.getText();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date ngayKhaiGiang = new Date(dateFormat.parse(ngayKhaiGiangText).getTime());
            kh.setNgayKG(ngayKhaiGiang);
        } catch (Exception e) {
            System.out.println(e.fillInStackTrace());
        }

        Date ngayTao = new Date(System.currentTimeMillis());
        kh.setNgayTao(ngayTao);

        if (Auth.isLogin()) {
            kh.setMaNV(Auth.user.getMaNV());
        }
        
        System.out.println(kh.toString());

        return kh;
    }

}
